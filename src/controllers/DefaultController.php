<?php
/**
 * Created by PhpStorm.
 * @user: MackRais
 * @site: http://mackrais.com
 * @email: mackraiscms@gmail.com
 */

namespace mackrais\portfolio\controllers;

use LinkedIn\AccessToken;
use mackrais\portfolio\services\LinkedInOAuth;
use Yii;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\web\Controller;
use LinkedIn\Client;
use LinkedIn\Scope;
use yii\web\NotFoundHttpException;

/**
 * Class DefaultController
 * @package app\modules\sitemap\controllers
 */
class DefaultController extends Controller
{
    public $useSubdomain = true;

    private LinkedInOAuth $linkedInOAuth;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->linkedInOAuth = new LinkedInOAuth(
            '86stm6706xvgwr',
            '7bQZZOTg1HFEL0PO',
            'http://mackrais.loc/portfolio/linkedin-oauth'
        );

    }

//    protected function checkSubDomain(){
//dd($this->request->getHostInfo());

//        throw new NotFoundHttpException();
//    }


    /**
     *
     */
    public function actionIndex(){

//        echo Html::a('login', $this->linkedInOAuth->getLoginUrl());

        $isPdf = $this->request->get('pdf', false);
        $tpl = $isPdf ? $this->action->id : 'download-pdf';

        return $this->render($this->action->id . '.php', []);
    }

    public function actionLinkedinOauth(){
        $code = Yii::$app->request->queryParams['code'] ?? null;

        $accessToken = $this->linkedInOAuth->getClient()->getAccessToken($code);


        file_put_contents('token.json', json_encode($accessToken));
    }

    public function actionSkills(){
        // load token from the file
        $tokenString = file_get_contents('token.json');
        $tokenData = json_decode($tokenString, true);
        $accessToken = new AccessToken($tokenData['token'], $tokenData['expiresAt']);

        $client = $this->linkedInOAuth->getClient();

// set token for client
        $client->setAccessToken($accessToken);

        $profile = $client->get(
            'me',
        );

        echo '<pre>';
        $skills = $client->get(
            'skills/' . $profile['id'],
            ['locale.language' => 'en', 'locale.country' => 'US']
        );


        print_r($profile);
        print_r($profile);
    }

    public function actionDownloadPdf(){
        $mpdf = new \Mpdf\Mpdf(['mode' => 'utf-8', 'format' => 'A4-L']);

        $html = file_get_contents(Yii::$app->request->hostInfo );
        $html = str_replace(["\n\t", "\n", "\t"], "", $html);
        $html = preg_replace('/\s+/', ' ', $html);

        $doc = new \DOMDocument();
        libxml_use_internal_errors(true);
        $doc->loadHTML($html);

        $body = $doc->getElementsByTagName('body');
        $head = $doc->getElementsByTagName('head');
        $links = $doc->getElementsByTagName('link');

        $css = '';
        $css .= file_get_contents(__DIR__ . '/../assets/css/pdf.bootstrap4.css');
        $css .= file_get_contents(__DIR__ . '/../assets/css/portfolio.css');
        $css .= file_get_contents(__DIR__ . '/../assets/css/pdf.css');

        $body = $body->item(0);
        $mpdf->WriteHTML($css,\Mpdf\HTMLParserMode::HEADER_CSS);
        $htmlBody = $doc->savehtml($body);

        $mpdf->WriteHTML($htmlBody);
        return $mpdf->Output();
    }
}
